/**
 * üîß –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≥–∞–ª–µ—Ä–µ–π –∫–æ –≤—Å–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º —Ñ–æ—Ç–æ
 * –ó–∞–ø—É—Å–∫: node scripts/setupGalleries.js
 */

import fs from "fs";
import path from "path";
import { fileURLToPath } from "url";

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
const projectRoot = path.resolve(__dirname, "..");

// –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ñ–æ—Ç–æ
const photoCategories = [
  "fashion",
  "e-commerce",
  "events",
  "magazine",
  "reportage",
  "personal",
  "interior",
  "food",
  "product",
  "bts",
];

// HTML –∫–æ–¥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–∞–∂–¥—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
const galleryHTML = `
    <!-- –°—Ç–∏–ª–∏ –¥–ª—è —Ñ–æ—Ç–æ–≥–∞–ª–µ—Ä–µ–∏ -->
    <link rel="stylesheet" href="/src/stylesheets/photoGallery.css" />
  </head>
  <body>
    <script type="module" src="/src/javascript/main.jsx"></script>
    
    <!-- üì∏ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ñ–æ—Ç–æ–≥–∞–ª–µ—Ä–µ–∏ -->
    <div id="gallery-container"></div>
    
    <!-- –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∫—Ä–∏–ø—Ç –≥–∞–ª–µ—Ä–µ–∏ -->
    <script type="module">
      import { autoLoadGallery } from '/src/javascript/photoGallery.js';
      autoLoadGallery();
    </script>`;

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç HTML —Ñ–∞–π–ª, –¥–æ–±–∞–≤–ª—è—è –≥–∞–ª–µ—Ä–µ—é
 */
function updateHTMLFile(filePath, category) {
  try {
    let content = fs.readFileSync(filePath, "utf-8");

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É–∂–µ –ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≥–∞–ª–µ—Ä–µ—è
    if (content.includes("gallery-container")) {
      console.log(`‚úÖ ${category}: –≥–∞–ª–µ—Ä–µ—è —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞`);
      return false;
    }

    // –ù–∞—Ö–æ–¥–∏–º –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–π —Ç–µ–≥ </head> –∏ —Ç–µ–≥ <body>
    const headEndIndex = content.indexOf("</head>");
    const bodyStartIndex = content.indexOf("<body>");

    if (headEndIndex === -1 || bodyStartIndex === -1) {
      console.error(`‚ùå ${category}: –Ω–µ –Ω–∞–π–¥–µ–Ω—ã —Ç–µ–≥–∏ </head> –∏–ª–∏ <body>`);
      return false;
    }

    // –í—Å—Ç–∞–≤–ª—è–µ–º CSS –≤ head
    const beforeHead = content.substring(0, headEndIndex);
    const afterBody = content.substring(bodyStartIndex + 6); // +6 –¥–ª—è <body>

    // –§–æ—Ä–º–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
    const newContent = beforeHead + galleryHTML + afterBody;

    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    fs.writeFileSync(filePath, newContent, "utf-8");
    console.log(`‚úÖ ${category}: –≥–∞–ª–µ—Ä–µ—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞`);
    return true;
  } catch (error) {
    console.error(`‚ùå ${category}: –æ—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞`, error.message);
    return false;
  }
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –ø–∞–ø–∫–∏ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
 */
function createImageFolders() {
  const imagesDir = path.join(projectRoot, "public", "images");

  for (const category of photoCategories) {
    const categoryDir = path.join(imagesDir, category);

    if (!fs.existsSync(categoryDir)) {
      fs.mkdirSync(categoryDir, { recursive: true });
      console.log(`üìÅ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞: /images/${category}/`);

      // –°–æ–∑–¥–∞–µ–º README —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
      const readmePath = path.join(categoryDir, "README.md");
      const readmeContent = `# ${
        category.charAt(0).toUpperCase() + category.slice(1)
      } Photos

–î–æ–±–∞–≤—å—Ç–µ —Å—é–¥–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
- ${category}_01.jpg, ${category}_02.jpg, ${category}_03.jpg...
- –ò–ª–∏: ${category}01.jpg, ${category}02.jpg...
- –ò–ª–∏: img_01.jpg, img_02.jpg...

–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: .jpg, .jpeg, .png, .webp, .gif

–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ /${category}.html
`;

      fs.writeFileSync(readmePath, readmeContent, "utf-8");
    }
  }
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
 */
function setupGalleries() {
  console.log("üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–æ—Ç–æ–≥–∞–ª–µ—Ä–µ–π...\n");

  // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
  createImageFolders();
  console.log("");

  let updatedCount = 0;

  // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—É—é HTML —Å—Ç—Ä–∞–Ω–∏—Ü—É
  for (const category of photoCategories) {
    const htmlPath = path.join(
      projectRoot,
      "pages",
      "photos",
      `${category}.html`
    );

    if (fs.existsSync(htmlPath)) {
      const wasUpdated = updateHTMLFile(htmlPath, category);
      if (wasUpdated) updatedCount++;
    } else {
      console.log(`‚ö†Ô∏è ${category}: —Ñ–∞–π–ª ${htmlPath} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    }
  }

  console.log(`\nüéâ –ì–æ—Ç–æ–≤–æ! –û–±–Ω–æ–≤–ª–µ–Ω–æ ${updatedCount} —Å—Ç—Ä–∞–Ω–∏—Ü`);
  console.log("\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:");
  console.log("1. –î–æ–±–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤ –ø–∞–ø–∫–∏ /public/images/{category}/");
  console.log(
    "2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç –∏–º–µ–Ω–æ–≤–∞–Ω–∏—è: {category}_01.jpg, {category}_02.jpg..."
  );
  console.log(
    "3. –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö"
  );
  console.log("\nüîó –ü—Ä–∏–º–µ—Ä—ã —Å—Å—ã–ª–æ–∫:");
  console.log("   /photos/fashion.html - –ø–æ–∫–∞–∂–µ—Ç —Ñ–æ—Ç–æ –∏–∑ /images/fashion/");
  console.log(
    "   /photos/e-commerce.html - –ø–æ–∫–∞–∂–µ—Ç —Ñ–æ—Ç–æ –∏–∑ /images/e-commerce/"
  );
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
setupGalleries();
